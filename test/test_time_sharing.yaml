# This script should be called from Batsim's root directory

# If needed, the working directory of this script can be specified within this file
#base_working_directory: ~/proj/batsim

# If needed, the output directory of this script can be specified within this file
base_output_directory: /tmp/batsim_tests/time_sharing

base_variables:
  batsim_dir: ${base_working_directory}

implicit_instances:
  implicit:
    sweep:
      platform :
        - {"name":"cluster512", "filename":"${batsim_dir}/platforms/cluster512.xml", "master_host":"master_host0"}
      random_seed:
        - 0
        - 1
        - 2
        - 3
      workload :
        - {"name":"tiny", "filename":"${batsim_dir}/workload_profiles/test_workload_profile.json"}
        - {"name":"medium", "filename":"${batsim_dir}/workload_profiles/batsim_paper_workload_example.json"}
      pybatsim_algo:
        - {"name":"random", "algo_name":"randomSched"}
    generic_instance:
      timeout: 20
      working_directory: ${base_working_directory}
      output_directory: ${base_output_directory}/results/${pybatsim_algo[name]}_${workload[name]}_${platform[name]}_${random_seed}
      batsim_command: batsim -p ${platform[filename]} -w ${workload[filename]} -e ${output_directory}/out --mmax-workload --allow-time-sharing -m ${platform[master_host]}
      sched_command: ${batsim_dir}/schedulers/pybatsim/launcher.py ${pybatsim_algo[algo_name]}

commands_before_instances:
  - ${batsim_dir}/test/is_batsim_dir.py ${base_working_directory}
  - ${batsim_dir}/test/clean_output_dir.py ${base_output_directory}
